install.packages("slidify")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
bw_xyplot(weight ~ Time | Diet, BodyWeight)
bwxyplot(weight ~ Time | Diet, BodyWeight)
bwplot(weight ~ Time | Diet, BodyWeight)
a <- xyplot(weight ~ Time | Diet, BodyWeight)
info(a)
summary(a)
class(a)
print(a)
summary(weight)
summary(Time)
summary(Diet)
summary(BodyWeight)
head(BodyWeight)
head(BodyWeight.Diet)
summary(BodyWeight.Diet)
a <- BodyWeight$Diet
summary(a)
library(ggplot2)
install.packages(ggplot2))
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
g <- ggplot(movies, aes(votes, rating))
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
x <- matrix(1:6, 2,3)
x
complete.cases()
complete.cases?
รง
?complete.cases
cube <- function(x, n) {
x^3
}
cube(3)
n
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
x > 5
if(x > 5) {
x <- 0
}
getwd()
setwd("./GitHub/ProgrammingAssignment2/"
)
getwd()
source("cacachematrix.R")
source("cachematrix.R")
a<-makeCacheMatrix()
a
a$get()
a$set()
a$set(matrix(1:4,2,2))
a$get()
a
a$get()
a[[get()]]
a$getinv()
a$setinv(cacheSolve)
a$getinv()
a$getinv
a$getinv()
a$setinv()
a$setinv
b<-makeVector()
source("cachevector.R")
b<-makeVector()
b
b$get()
b$set(c(5, 2, 1))
b$get()
b$getmean()
b$setmean()
cachemean(b)
b$getmean()
b$setmean(4)
b$getmean()
cachemean(b)
c <- makeVector(c(3 6 8))
c <- makeVector(c(3,8))
c$get()
c$set()
c$set(c(7,8))
c$get()
c$getmean()
c$setmean(cachemean(c))
c$getmean()
c
c$getmean()
c$get()
a
a$get()
a$getinv()
a$get()
a$set(matrix(3:6,2,2))
a$get()
a$getinv()
a$setinv(cacheSolve(a))
a$getinv()
h<-a$getinv()
a*h
a
g<-a$get()
g*
h
g
h
source("cachematrix")
source("cachematrix.R")
mymat <- makeCacheMatrix(g)
mymat$get()
mymat$getinv()
mymat$setinv(cacheSolve(mymat))
mymat$getinv()
d1 <- mymat$getinv()
d2 <- mymat$get()
d1
d2
d2*d1
d1*d2
solve(d2, diag(2))
source("cachematrix.R")
mymat <- makeCacheMatrix(g)
mymat$get()
mymat$getinv()
mymat$setinv(cacheSolve(mymat))
mymat$getinv()
mymat$get()
r11<-mymat$get()
r12<-mymat$getinv()
r11*r12
r12%*%r11
mat2 <- makeCacheMatrix(1:9,3,3)
mat2 <- makeCacheMatrix(matrix(1:9,3,3)
)
mat2$get()
mat2$getinv()
cacheSolve(mat2)
mat2 <- makeCacheMatrix(matrix(c(3,1,2,4,5,6,9,7,8),3,3)
mat2$getinv()
mat2 <- makeCacheMatrix(matrix(c(3,1,2,4,5,6,9,7,8),3,3))
mat2$get()
cacheSolve(mat2)
mat2$getinv()
cacheSolve(mat2)
mat2 <- makeCacheMatrix(matrix(c(0,1,2,4,5,6,9,7,8),3,3))
mat2$get()
cacheSolve(mat2)
mat2$getinv()
cacheSolve(mat2)
